#################################################
# 1 NODE TESTING VAGRANTFILE TEMPLATE
# CHEF-SOLO TESTING
# REQUIRES:  Vagrant 1.2.2 + VirtualBox 4.2.12
#################################################

Vagrant.configure("2") do |config|
    #VAGRANT_LOG = debug
    #config.berkshelf.enabled = true
    config.ssh.timeout = 120

		#chef-zero configuration block
		#chef-zero runs on the host machine not the guest
		#If you have Chef-Zero installed on your local machine, you need to turn it off to run chef-solo testing
		config.chef_zero.enabled = false

    config.vm.provider :virtualbox do |vb|
      # headless mode or not
      vb.gui = true
      # Use VBoxManage to customize the VM. For example to change memory:
      #  vb.customize ["modifyvm", :id, "--memory", "512"]
      end
    
    config.vm.define :vm1 do |vm1|
        vm1.vm.hostname  =  "vagrantvm1-local"
        vm1.vm.box       =  "centos64basebox"
        #vm1.vm.box_url = "/Users/$USERNAME/git-repos/vagrantprojects/vagrantboxes"
        #vm1.vm.network :private_network, ip: "192.168.56.71"
        #vm1 chef_solo provision block
			  vm1.vm.provision :chef_solo do |chef|
          chef.cookbooks_path = "vagrant-chef-solo/cookbooks"
          chef.roles_path = "vagrant-chef-solo/roles"
          chef.data_bags_path = "vagrant-chef-solo/data_bags"
          #chef.log_level = :debug
          #Arbitrary json to be used for chef attributes
          #chef.json = {}
          chef.run_list = [
			            "recipe[yum::default]",
	                "recipe[nginx::default]",
	        #        "recipe[minitest-handler]"
			    ]
			  end 
    end
end 
